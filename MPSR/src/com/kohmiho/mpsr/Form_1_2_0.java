package com.kohmiho.mpsr;

import com.kohmiho.vaadin.converter.DateToSqlTimestampConverter;
import com.kohmiho.vaadin.converter.StringToBigDecimalConverter;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.fieldgroup.FieldGroup;
import com.vaadin.server.Resource;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextField;

@SuppressWarnings("serial")
public class Form_1_2_0 extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Label label_OffTarget;
	@AutoGenerated
	private Label label_AtRisk;
	@AutoGenerated
	private Label label_OnTarget;
	@AutoGenerated
	private Label label_Legend;
	@AutoGenerated
	private PopupDateField inServiceDateAtCompletion;
	@AutoGenerated
	private PopupDateField inServiceDateToDate;
	@AutoGenerated
	private PopupDateField inServiceDateApproved;
	@AutoGenerated
	private ComboBox inServiceDateStatus;
	@AutoGenerated
	private Label label_InServiceDate;
	@AutoGenerated
	private TextField scheduleAtCompletion;
	@AutoGenerated
	private TextField scheduleToDate;
	@AutoGenerated
	private TextField scheduleApprovde;
	@AutoGenerated
	private ComboBox scheduleStatus;
	@AutoGenerated
	private Label label_Schedule;
	@AutoGenerated
	private TextField budgetAtCompletion;
	@AutoGenerated
	private TextField budgetToDate;
	@AutoGenerated
	private TextField budgetApproved;
	@AutoGenerated
	private ComboBox budgetStatus;
	@AutoGenerated
	private Label label_Budget;
	@AutoGenerated
	private Label labelPrototype;
	FieldGroup fieldGroup = new FieldGroup();

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public Form_1_2_0() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		initFields();
	}

	private void initFields() {

		StringToBigDecimalConverter numberConverter = new StringToBigDecimalConverter();
		DateToSqlTimestampConverter dateConverter = new DateToSqlTimestampConverter();

		mainLayout.addStyleName("form-1-2");
		label_OnTarget.addStyleName("on-target");
		label_AtRisk.addStyleName("at-risk");
		label_OffTarget.addStyleName("off-target");

		labelPrototype.setValue("Prototype");

		TextField[] textFields = { budgetApproved, budgetToDate, budgetAtCompletion, scheduleApprovde, scheduleToDate, scheduleAtCompletion };
		String[] propertyIds = { "BUDGET_APPROVED", "BUDGET_TO_DATE", "BUDGET_AT_COMP", "SCHEDULE_APPROVED", "SCHEDULE_TO_DATE", "SCHEDULE_AT_COMP" };
		for (int i = 0; i < textFields.length; i++) {
			textFields[i].setNullRepresentation("");
			textFields[i].setConverter(numberConverter);
			fieldGroup.bind(textFields[i], propertyIds[i]);
		}

		PopupDateField[] dateFields = { inServiceDateApproved, inServiceDateToDate, inServiceDateAtCompletion };
		propertyIds = new String[] { "IN_SERVICE_APPROVED", "IN_SERVICE_TO_DATE", "IN_SERVICE_AT_COMP" };
		for (int i = 0; i < dateFields.length; i++) {
			dateFields[i].setConverter(dateConverter);
			fieldGroup.bind(dateFields[i], propertyIds[i]);
		}

		String[] colors = { "Green", "Yellow", "Red" };
		String[] colorCaptions = { "On Target", "At Risk", "Off Target" };
		Resource[] colorIcons = { MPSRUI.ICON_CIRCLE_GREEN, MPSRUI.ICON_CIRCLE_YELLOW, MPSRUI.ICON_CIRCLE_RED };
		ComboBox[] comboBoxs = { budgetStatus, scheduleStatus, inServiceDateStatus };
		propertyIds = new String[] { "BUDGET_STATUS", "SCHEDULE_STATUS", "IN_SERVICE_STATUS" };
		for (int i = 0; i < comboBoxs.length; i++) {
			fieldGroup.bind(comboBoxs[i], propertyIds[i]);
			for (int j = 0; j < colors.length; j++) {
				comboBoxs[i].addItem(colors[j]);
				comboBoxs[i].setItemCaption(colors[j], colorCaptions[j]);
				comboBoxs[i].setItemIcon(colors[j], colorIcons[j]);
			}
		}

		fieldGroup.setBuffered(false);

	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("580px");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("580px");
		setHeight("100.0%");
		
		// labelPrototype
		labelPrototype = new Label();
		labelPrototype.setStyleName("prototype2");
		labelPrototype.setImmediate(false);
		labelPrototype.setWidth("-1px");
		labelPrototype.setHeight("-1px");
		labelPrototype.setValue("Label");
		mainLayout.addComponent(labelPrototype, "top:0.0px;right:0.0px;");
		
		// label_Budget
		label_Budget = new Label();
		label_Budget.setImmediate(false);
		label_Budget.setWidth("-1px");
		label_Budget.setHeight("-1px");
		label_Budget.setValue("Budget ($M)");
		mainLayout.addComponent(label_Budget, "top:20.0px;left:20.0px;");
		
		// budgetStatus
		budgetStatus = new ComboBox();
		budgetStatus.setCaption("Status");
		budgetStatus.setImmediate(false);
		budgetStatus.setWidth("110px");
		budgetStatus.setHeight("-1px");
		mainLayout.addComponent(budgetStatus, "top:60.0px;left:40.0px;");
		
		// budgetApproved
		budgetApproved = new TextField();
		budgetApproved.setCaption("Approved (Include RnC)");
		budgetApproved.setImmediate(false);
		budgetApproved.setWidth("100px");
		budgetApproved.setHeight("24px");
		mainLayout.addComponent(budgetApproved, "top:60.0px;left:180.0px;");
		
		// budgetToDate
		budgetToDate = new TextField();
		budgetToDate.setCaption("To Date");
		budgetToDate.setImmediate(false);
		budgetToDate.setWidth("100px");
		budgetToDate.setHeight("-1px");
		mainLayout.addComponent(budgetToDate, "top:60.0px;left:330.0px;");
		
		// budgetAtCompletion
		budgetAtCompletion = new TextField();
		budgetAtCompletion.setCaption("At Completion");
		budgetAtCompletion.setImmediate(false);
		budgetAtCompletion.setWidth("100px");
		budgetAtCompletion.setHeight("-1px");
		mainLayout.addComponent(budgetAtCompletion, "top:60.0px;left:460.0px;");
		
		// label_Schedule
		label_Schedule = new Label();
		label_Schedule.setImmediate(false);
		label_Schedule.setWidth("-1px");
		label_Schedule.setHeight("-1px");
		label_Schedule.setValue("Schedule - Duration (months)");
		mainLayout.addComponent(label_Schedule, "top:100.0px;left:20.0px;");
		
		// scheduleStatus
		scheduleStatus = new ComboBox();
		scheduleStatus.setCaption("Status");
		scheduleStatus.setImmediate(false);
		scheduleStatus.setWidth("110px");
		scheduleStatus.setHeight("-1px");
		mainLayout.addComponent(scheduleStatus, "top:140.0px;left:40.0px;");
		
		// scheduleApprovde
		scheduleApprovde = new TextField();
		scheduleApprovde.setCaption("Approved (Include RnC)");
		scheduleApprovde.setImmediate(false);
		scheduleApprovde.setWidth("100px");
		scheduleApprovde.setHeight("-1px");
		mainLayout.addComponent(scheduleApprovde, "top:140.0px;left:180.0px;");
		
		// scheduleToDate
		scheduleToDate = new TextField();
		scheduleToDate.setCaption("To Date");
		scheduleToDate.setImmediate(false);
		scheduleToDate.setWidth("100px");
		scheduleToDate.setHeight("-1px");
		mainLayout.addComponent(scheduleToDate, "top:140.0px;left:330.0px;");
		
		// scheduleAtCompletion
		scheduleAtCompletion = new TextField();
		scheduleAtCompletion.setCaption("At Completion");
		scheduleAtCompletion.setImmediate(false);
		scheduleAtCompletion.setWidth("100px");
		scheduleAtCompletion.setHeight("-1px");
		mainLayout.addComponent(scheduleAtCompletion, "top:140.0px;left:460.0px;");
		
		// label_InServiceDate
		label_InServiceDate = new Label();
		label_InServiceDate.setImmediate(false);
		label_InServiceDate.setWidth("-1px");
		label_InServiceDate.setHeight("-1px");
		label_InServiceDate.setValue("In-Service Date");
		mainLayout.addComponent(label_InServiceDate, "top:180.0px;left:20.0px;");
		
		// inServiceDateStatus
		inServiceDateStatus = new ComboBox();
		inServiceDateStatus.setCaption("Status");
		inServiceDateStatus.setImmediate(false);
		inServiceDateStatus.setWidth("110px");
		inServiceDateStatus.setHeight("-1px");
		mainLayout.addComponent(inServiceDateStatus, "top:220.0px;left:40.0px;");
		
		// inServiceDateApproved
		inServiceDateApproved = new PopupDateField();
		inServiceDateApproved.setCaption("Approved (Include RnC)");
		inServiceDateApproved.setImmediate(false);
		inServiceDateApproved.setWidth("100px");
		inServiceDateApproved.setHeight("-1px");
		mainLayout.addComponent(inServiceDateApproved, "top:220.0px;left:180.0px;");
		
		// inServiceDateToDate
		inServiceDateToDate = new PopupDateField();
		inServiceDateToDate.setCaption("To Date");
		inServiceDateToDate.setImmediate(false);
		inServiceDateToDate.setWidth("100px");
		inServiceDateToDate.setHeight("-1px");
		mainLayout.addComponent(inServiceDateToDate, "top:220.0px;left:330.0px;");
		
		// inServiceDateAtCompletion
		inServiceDateAtCompletion = new PopupDateField();
		inServiceDateAtCompletion.setCaption("At Completion");
		inServiceDateAtCompletion.setImmediate(false);
		inServiceDateAtCompletion.setWidth("100px");
		inServiceDateAtCompletion.setHeight("-1px");
		mainLayout.addComponent(inServiceDateAtCompletion, "top:220.0px;left:460.0px;");
		
		// label_Legend
		label_Legend = new Label();
		label_Legend.setImmediate(false);
		label_Legend.setWidth("-1px");
		label_Legend.setHeight("-1px");
		label_Legend.setValue("Legend:");
		mainLayout.addComponent(label_Legend, "top:280.0px;left:20.0px;");
		
		// label_OnTarget
		label_OnTarget = new Label();
		label_OnTarget.setImmediate(false);
		label_OnTarget.setWidth("100px");
		label_OnTarget.setHeight("20px");
		label_OnTarget.setValue("On Target");
		mainLayout.addComponent(label_OnTarget, "top:300.0px;left:40.0px;");
		
		// label_AtRisk
		label_AtRisk = new Label();
		label_AtRisk.setImmediate(false);
		label_AtRisk.setWidth("100px");
		label_AtRisk.setHeight("20px");
		label_AtRisk.setValue("At Risk");
		mainLayout.addComponent(label_AtRisk, "top:300.0px;left:140.0px;");
		
		// label_OffTarget
		label_OffTarget = new Label();
		label_OffTarget.setImmediate(false);
		label_OffTarget.setWidth("100px");
		label_OffTarget.setHeight("20px");
		label_OffTarget.setValue("Off Target");
		mainLayout.addComponent(label_OffTarget, "top:300.0px;left:240.0px;");
		
		return mainLayout;
	}

}
