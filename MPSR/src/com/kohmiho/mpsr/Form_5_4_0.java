package com.kohmiho.mpsr;

import com.kohmiho.vaadin.component.MPSRTable;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.fieldgroup.FieldGroup;
import com.vaadin.data.util.sqlcontainer.SQLContainer;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table.Align;
import com.vaadin.ui.Table.ColumnHeaderMode;
import com.vaadin.ui.TextArea;

@SuppressWarnings("serial")
public class Form_5_4_0 extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private MPSRTable tableMilestone;
	@AutoGenerated
	private TextArea textArea_1;
	@AutoGenerated
	private Label labelPrototype;
	FieldGroup fieldGroup = new FieldGroup();

	SQLContainer milestone = null;

	private static final Object[] VISIBLE_COLUMNS = { "MILESTONE", "PLAN_DATE", "END_DATE" };
	private static final String[] COLUMN_HEADERS = { "Milestone", "Planned Date", "Finish Date" };
	private static final String[] DATE_COLUMNS = { "PLAN_DATE", "END_DATE" };

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public Form_5_4_0(SQLContainer milestone) {

		this.milestone = milestone;

		buildMainLayout();
		setCompositionRoot(mainLayout);

		initFields();
	}

	private void initFields() {

		textArea_1.setCaption(MPSRUI.TREE_5_4);
		textArea_1.setNullRepresentation("");

		labelPrototype.setValue("Prototype");

		fieldGroup.bind(textArea_1, "DESC_5_4");
		fieldGroup.setBuffered(false);

		tableMilestone.setContainerDataSource(milestone);
		tableMilestone.setColumnHeaderMode(ColumnHeaderMode.EXPLICIT);
		tableMilestone.setVisibleColumns(VISIBLE_COLUMNS);
		tableMilestone.setColumnHeaders(COLUMN_HEADERS);

		tableMilestone.setColumnWidth("MILESTONE", 360);
		tableMilestone.setColumnWidth("PLAN_DATE", 80);
		tableMilestone.setColumnWidth("END_DATE", 80);

		for (String column : DATE_COLUMNS) {
			tableMilestone.setColumnAlignment(column, Align.CENTER);
		}

	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("640px");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("640px");
		setHeight("100.0%");

		// labelPrototype
		labelPrototype = new Label();
		labelPrototype.setStyleName("prototype2");
		labelPrototype.setImmediate(false);
		labelPrototype.setWidth("-1px");
		labelPrototype.setHeight("-1px");
		mainLayout.addComponent(labelPrototype, "top:0.0px;right:0.0px;");

		// textArea_1
		textArea_1 = new TextArea();
		textArea_1.setImmediate(false);
		textArea_1.setWidth("600px");
		textArea_1.setHeight("200px");
		mainLayout.addComponent(textArea_1, "top:20.0px;left:20.0px;");

		// tableMilestone
		tableMilestone = new MPSRTable();
		tableMilestone.setImmediate(false);
		tableMilestone.setWidth("560px");
		tableMilestone.setHeight("200px");
		mainLayout.addComponent(tableMilestone, "top:240.0px;left:20.0px;");

		return mainLayout;
	}

}
